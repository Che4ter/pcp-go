go demonstration
HSLU - PCP
21 Dec 2017

by Alan, Philipp

https://github.com/Che4ter/pcp-go
* Live Slides

Live Slides verfügbar unter
.link http://10.155.107.140:4242 http://10.155.107.140:4242

* Einleitung
- seit 2009
- von Google Mitarbeitern
- Typisierung: stark, statisch
- Paradigmas: Concurrent, Imperativ, Strukturiert
- Garbage Collection, Memory safety
- Einfaches cross-compiling
- Lizenz: BSD
- Verbreitung: Google, Kubernetes, BBC, Novartis, Cloudflare, Twitter, Dropbox, SpaceX, Atlassian...
.image https://upload.wikimedia.org/wikipedia/commons/2/23/Golang.png 80 _
.caption _Gopher_ by [[https://www.instagram.com/reneefrench/][Renée French]]

* Concurrency vs Parallelism
    Concurrency is about dealing with lots of things at once.
    Parallelism is about doing lots of things at once.

    Not the same, but related.

.caption by [[https://talks.golang.org/2012/waza.slide#1][Rob Pike]]

* Einfache Arbeit
.image images/GoSimple.jpg 500 _

* Paralelle Arbeit
.image images/GoParallel.jpg 500 _

* Concurrent Arbeit
.image images/GoConcurrent.jpg 500 _

* Paralele Concurrent Arbeit
.image images/GoConcurrentMulti.png 500 _

* Go Concurrency Support

Go bietet:
- concurrent execution (goroutines)
- synchronization and messaging (channels)
- multi-way concurrent control (select)


* Demo: goroutines waitgroup
.code goroutines/goroutines_waitgroup.go /^func talking/,/^}/
.play goroutines/goroutines_waitgroup.go /^func main/,/^}/

* Demo: goroutines channels
.code goroutines/goroutineschannels.go /^func talkingback/,/^}/
.play goroutines/goroutineschannels.go /^func main/,/^}/


* Demo: First Class Function mit Sort Operator

.code sort_list/sort_list.go /^func Sort/,/^}/
.code sort_list/sort_list.go /^func ASC/,/^}/
.code sort_list/sort_list.go /^func DESC/,/^}/
.play -edit sort_list/sort_list.go /^func main/,/^}/


* Demo: Cross Plattform
    main_windows.go
.code cross_plattform/main_windows.go /^func GetCommand/,/^}/

    main_linuxlike.go
.code cross_plattform/main_linuxlike.go /^func GetCommand/,/^}/
.code cross_plattform/main.go /^func main/,/^}/

* Fazit: Team
- Ja, z.B. Backendapplikation, Concurrency lastige Applikationen
- Schnell (Compiler/Laufzeit), Memory safety, gute Standart Bibilothek

- Weniger geignet: Desktop Applikationen
- Kein UI Toolkit

* Fazit: Alan

.image http://ipengineer.net/wp-content/uploads/2016/07/gophercloud.png 500 _

* Fazit: Philipp

.image https://forum.golangbridge.org/uploads/default/original/2X/0/03cbc1a9f9178055093eb0c25ba9df2c29611671.png 500 _